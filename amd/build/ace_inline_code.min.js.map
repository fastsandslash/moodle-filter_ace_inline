{"version":3,"sources":["../src/ace_inline_code.js"],"names":["define","$","escapeHtml","text","map","replace","m","getUiParameters","pre","defaultParams","attrName","attr","value","dataName","uiParameters","attributes","getNamedItem","toLowerCase","parseInt","setLangString","langStringName","textarea","additionalText","require","str","promise","get_string","when","then","message","show","html","setErrorMessage","resultCode","addUi","editNode","aceSession","htmlOutput","button","outputText","after","hide","M","util","js_pending","ajax","on","next","remove","code","prefix","getValue","suffix","call","methodname","args","sourcecode","language","stdin","files","params","done","responseJson","response","JSON","parse","cmpinfo","output","stderr","result","fail","error","alert","debuginfo","js_complete","applyAceHighlighting","ace","root","applyAceAndBuildUi","applyAceInteractive","config","className","numLines","showLineNumbers","css","width","margin","codeElements","getElementsByClassName","i","length","nodeName","hasAttribute","closest","jqpre","split","aceConfig","newLineMode","mode","minLines","maxLines","fontSize","showGutter","autoScrollEditorIntoView","highlightActiveLine","editor","edit","get","session","getSession","setValue","readonly","setReadOnly","setAttribute","initAceInteractive","window","document","initAceHighlighting"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http:moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http:www.gnu.org/licenses/>.\n */\n\n/**\n * JavaScript for implementing both the ace_highlight_code and ace_interactive_code\n * functionality of the ace_line filter (q.v.)\n *\n * @module filter_ace_inline/highlight_code\n * @copyright  Richard Lobb, 2021, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine(['jquery'], function($) {\n    /**\n     * Escape text special HTML characters.\n     * @param {string} text\n     * @returns {string} text with various special chars replaced with equivalent\n     * html entities. Newlines are replaced with <br>.\n     */\n    function escapeHtml(text) {\n      var map = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#039;',\n        ' ': '&nbsp;',\n        \"\\n\": '<br>'\n      };\n\n      return text.replace(/[&<>\"' \\n]/g, function(m) { return map[m]; });\n    }\n    /**\n     * Extract from the given DOM pre element its various attributes.\n     * @param {DOMElement} pre The <pre> element from the DOM.\n     * @param {object} defaultParams An object with the default UI parameters.\n     * @returns {object} The original defaultParams object with any attributes\n     * that exist with in the <pre> element replaced by the pre element\n     * attributes. As special cases if there is a start-line-number parameter\n     * with the value 'none', start-line-number is set to null.\n     */\n    function getUiParameters(pre, defaultParams) {\n        var attrName, attr, value, dataName;\n        var uiParameters = {};\n\n        for (attrName in defaultParams) {\n            attr = pre.attributes.getNamedItem(attrName);\n            if (attr) {\n                dataName = attrName;\n            } else {  // Try data- as a prefix if 'raw' access fails.\n                dataName = 'data-' + attrName;\n                attr = pre.attributes.getNamedItem(dataName);\n            }\n            if (attr) {\n                value = attr.value;\n                if (attrName === 'start-line-number') {\n                    value = value.toLowerCase() === 'none' ? null : parseInt(value);\n                }\n            } else {\n                value = defaultParams[attrName];\n            }\n            uiParameters[attrName] = value;\n        }\n        return uiParameters;\n    }\n\n    /**\n     * Get the specified language string using\n     * AJAX and plug it into the given textarea\n     * @param {string} langStringName The language string name.\n     * @param {DOMnode} textarea The textarea into which the error message\n     * should be plugged.\n     * @param {string} additionalText Extra text to follow the result code.\n     */\n    function setLangString(langStringName, textarea, additionalText) {\n        require(['core/str'], function(str) {\n            var promise = str.get_string(langStringName, 'filter_ace_inline');\n            $.when(promise).then(function(message) {\n                textarea.show();\n                textarea.html(escapeHtml(\"*** \" + message + \" ***\\n\" + additionalText));\n            });\n        });\n    }\n\n    /**\n     * Get the appropriate language string error message for the given resultCode using\n     * AJAX and plug it into the given textarea.\n     * @param {int} resultCode The 'result' field of the Jobe return value.\n     * @param {DOMnode} textarea The textarea into which the error message\n     * should be plugged.\n     * @param {string} additionalText Extra text to follow the result code.\n     */\n    function setErrorMessage(resultCode, textarea, additionalText) {\n        if (resultCode == 11) {\n            setLangString('result_compilation_error', textarea, additionalText);\n        } else if (resultCode == 12) {\n            setLangString('result_runtime_error', textarea, additionalText);\n        } else if (resultCode == 13) {\n            setLangString('result_time_limit', textarea, additionalText);\n        } else if (resultCode == 17) {\n            setLangString('result_memory_limit', textarea, additionalText);\n        } else if (resultCode == 21) {\n            setLangString('result_server_overload', textarea, additionalText);\n        } else {\n            setLangString('result_unknown_error', textarea, additionalText);\n        }\n    }\n    /**\n     * Add a UI div containing a Try it! button and a text area to display the\n     * results of a button click. If uiParameters['html-output'] is non-null,\n     * the text area is used only for error output, and the output of the run\n     * is inserted directly into the DOM after the (usually hidden) textarea.\n     * @param {html_element} editNode The Ace edit node after which the div should be inserted.\n     * @param {object} aceSession The Ace editor session.\n     * @param {int} uiParameters The various parameters (mostly attributes of the pre element).\n     * Keys are button-name, lang, stdin, files, params.\n     */\n    function addUi(editNode, aceSession, uiParameters) {\n        var htmlOutput = uiParameters['html-output'] !== null;\n        var button = $(\"<div><button type='button' class='btn btn-secondary' \" +\n                \"style='margin-bottom:6px;padding:2px 8px;'>\" +\n                uiParameters['button-name'] + \"</button></div>\");\n        var outputText = $(\"<p style='font-family:monospace; font-size:12px;width:100%; \" +\n                \"background-color:white;border:1px gray;padding:5px'></p>\");\n        editNode.after(button);\n        button.after(outputText);\n        outputText.hide();\n\n        M.util.js_pending('core/ajax');\n        require(['core/ajax'], function(ajax) {\n            button.on('click', function() {\n                outputText.html('');\n                if (htmlOutput) {\n                    outputText.hide();\n                }\n                var next = outputText.next('div.filter-ace-inline-html');\n                if (next) {\n                    next.remove();\n                }\n                var code = uiParameters.prefix + aceSession.getValue() + uiParameters.suffix;\n                ajax.call([{\n                    methodname: 'qtype_coderunner_run_in_sandbox',\n                    args: {\n                        sourcecode: code,\n                        language: uiParameters['lang'],\n                        stdin: uiParameters['stdin'],\n                        files: uiParameters['files'],\n                        params: uiParameters['params']\n                    },\n                    done: function(responseJson) {\n                        var response = JSON.parse(responseJson);\n                        var text = response.cmpinfo + response.output + response.stderr;\n                        if (response.result === 15) { // Is it RESULT_SUCCESS?\n                            if (htmlOutput) {\n                                var html = $(\"<div class='filter-ace-inline-html '\" +\n                                        \"style='background-color:#EFF;padding:5px;\" +\n                                        \"margin-bottom:10px'>\" +\n                                        response.output + \"</div>\");\n                                outputText.after(html);\n                            } else {\n                                outputText.show();\n                                outputText.html(escapeHtml(text));\n                            }\n                        } else { // Oops. Plug in an error message instead.\n                            setErrorMessage(response.result, outputText, text);\n                        }\n                    },\n                    fail: function(error) {\n                        alert(\"System error: please report: \" + error.message + ' ' + error.debuginfo);\n                    }\n                }]);\n            });\n            M.util.js_complete('core/ajax');\n        });\n    }\n\n    /**\n     * Replace any PRE elements of class ace-highlight-code with a\n     * readonly Ace editor window.\n     * @param {object} ace The JavaScript Ace editor object.\n     * @param {DOMElement} root The root of the tree in which highlighting should\n     * be applied.\n     */\n    function applyAceHighlighting(ace, root) {\n        var defaultParams = {\n            'isInteractive': false,\n            'lang': 'python3',\n            'font-size': '11pt',\n            'start-line-number': null,\n            'readonly': true\n        };\n        applyAceAndBuildUi(ace, root, 'ace-highlight-code', defaultParams);\n    }\n\n    /**\n     * Replace any PRE elements of class ace-interactive-code with an\n     * Ace editor window and a Try it! button that allows the code to be run.\n     * @param {object} ace The JavaScript Ace editor object.\n     * @param {DOMElement} root The root of the tree in which the actions should\n     * be applied.\n     * @param {object} config The plugin configuration (settings).\n     */\n    function applyAceInteractive(ace, root, config) {\n        var defaultParams = {\n            'isInteractive': true,\n            'lang': 'python3',\n            'font-size': '11pt',\n            'start-line-number': 1,\n            'button-name': config['button_label'],\n            'readonly': null,\n            'stdin': '',\n            'files': '',\n            'params': '{\"cputime\": 2}',\n            'prefix': '',\n            'suffix': '',\n            'html-output': null\n        };\n        applyAceAndBuildUi(ace, root, 'ace-interactive-code', defaultParams);\n    }\n\n    /**\n     * Replace all <pre> elements in the document rooted at root that have\n     * the given className with an Ace editor windows that display the\n     * code in whatever language has been set. Also, if the given defaultParams\n     * object has a true attribute isInteractive, provide a Try it! button\n     * that runs the code.\n     * @param {object} ace The Ace editor code.\n     * @param {object} root The root of the HTML document to modify.\n     * @param {string} className The className that any target PRE must have.\n     * @param {object} defaultParams An object defining the allowed pre attributes\n     * that control the state of the Ace editor and the (optional) UI.\n     */\n    function applyAceAndBuildUi(ace, root, className, defaultParams) {\n        var text, numLines;\n        var showLineNumbers;\n        var css = {\n            width: \"100%\",\n            margin: \"6px\",\n            \"line-height\": \"1.3\"\n        };\n        var mode = \"ace/mode/python\"; // Default is Python.\n        var codeElements = root.getElementsByClassName(className);\n\n        for (var i=0; i < codeElements.length; i++) {\n            var pre = codeElements[i];\n            if (pre.nodeName !== 'PRE' || pre.hasAttribute('data-processing-done') ||\n                    !pre.closest(\"div[id^='question']\")) {\n                continue;\n            }\n            let uiParameters = getUiParameters(pre, defaultParams);\n            showLineNumbers = uiParameters['start-line-number'] ? true : false;\n            let jqpre = $(pre);\n            var text = jqpre.text();\n            numLines = text.split(\"\\n\").length;\n\n            let editNode = $(\"<div></div>\"); // Ace editor manages this\n            editNode.css(css);\n\n            jqpre.after(editNode);    // Insert the edit node\n\n            let aceConfig = {\n                newLineMode: \"unix\",\n                mode: mode,\n                minLines: numLines,\n                maxLines: 50,\n                fontSize: uiParameters['font-size'],\n                showLineNumbers: showLineNumbers,\n                showGutter: showLineNumbers,\n                autoScrollEditorIntoView: true,\n                highlightActiveLine: showLineNumbers\n            };\n            if (showLineNumbers) {\n                aceConfig['firstLineNumber'] = uiParameters['start-line-number'];\n            }\n            let editor = ace.edit(editNode.get(0), aceConfig);\n            let session = editor.getSession();\n            session.setValue(text);\n            if (uiParameters.readonly !== null) {\n                editor.setReadOnly(true);\n            }\n\n            // Add a button and text area for output.\n            if (uiParameters['isInteractive']) {\n                addUi(editNode, session, uiParameters);\n            }\n            pre.setAttribute('data-processing-done', '');\n            jqpre.hide();\n\n        }\n    }\n\n    return {\n        initAceInteractive: function(config) {\n            if (window.ace) {\n                applyAceInteractive(window.ace, document, config);\n            }\n        },\n        initAceHighlighting: function() {\n            if (window.ace) {\n                applyAceHighlighting(window.ace, document);\n            }\n        }\n    };\n});"],"file":"ace_inline_code.min.js"}