{"version":3,"sources":["../src/ace_inline_code.js"],"names":["define","$","escapeHtml","text","map","replace","m","getUiParameters","pre","defaultParams","attrName","attr","value","dataName","uiParameters","attributes","getNamedItem","toLowerCase","parseInt","setLangString","langStringName","textarea","additionalText","require","str","promise","get_string","when","then","message","show","html","diagnose","response","ERROR_RESPONSES","i","row","length","error","result","combinedOutput","maxLen","limit","s","substr","cmpinfo","output","stderr","handleButtonClick","ajax","outputDisplayArea","aceSession","htmlOutput","hide","next","remove","code","getValue","mapFunc","window","prefix","suffix","call","methodname","args","contextid","M","cfg","sourcecode","language","lang","stdin","files","params","done","responseJson","JSON","parse","after","extra","fail","alert","addUi","editNode","button","util","js_pending","on","js_complete","applyAceHighlighting","ace","root","applyAceAndBuildUi","applyAceInteractive","config","isInteractive","className","codeElements","getElementsByClassName","css","margin","nodeName","style","display","showLineNumbers","jqpre","numLines","split","scrollWidth","aceConfig","newLineMode","mode","minLines","maxLines","fontSize","firstLineNumber","showGutter","showPrintMargin","autoScrollEditorIntoView","highlightActiveLine","editor","edit","get","session","getSession","setValue","readonly","setReadOnly","renderer","$cursorLayer","element","initAceInteractive","ace_inline_code_interactive_done","Promise","resolve","setTimeout","document","initAceHighlighting","ace_inline_code_highlighting_done"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http:moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http:www.gnu.org/licenses/>.\n */\n\n/**\n * JavaScript for implementing both the ace_highlight_code and ace_interactive_code\n * functionality of the ace_line filter (q.v.)\n *\n * @module filter_ace_inline/highlight_code\n * @copyright  Richard Lobb, 2021, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine(['jquery'], function($) {\n    var RESULT_SUCCESS = 15;  // Code for a correct Jobe run.\n    /**\n     * Escape text special HTML characters.\n     * @param {string} text\n     * @returns {string} text with various special chars replaced with equivalent\n     * html entities. Newlines are replaced with <br>.\n     */\n    function escapeHtml(text) {\n      var map = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#039;',\n        ' ': '&nbsp;',\n        \"\\n\": '<br>'\n      };\n\n      return text.replace(/[&<>\"' \\n]/g, function(m) { return map[m]; });\n    }\n    /**\n     * Extract from the given DOM pre element its various attributes.\n     * @param {DOMElement} pre The <pre> element from the DOM.\n     * @param {object} defaultParams An object with the default UI parameters.\n     * @returns {object} The original defaultParams object with any attributes\n     * that exist with in the <pre> element replaced by the pre element\n     * attributes. As special cases if there is a start-line-number parameter\n     * with the value 'none', start-line-number is set to null.\n     */\n    function getUiParameters(pre, defaultParams) {\n        var attrName, attr, value, dataName;\n        var uiParameters = {};\n\n        for (attrName in defaultParams) {\n            attr = pre.attributes.getNamedItem(attrName);\n            if (attr) {\n                dataName = attrName;\n            } else {  // Try data- as a prefix if 'raw' access fails.\n                dataName = 'data-' + attrName;\n                attr = pre.attributes.getNamedItem(dataName);\n            }\n            if (attr) {\n                value = attr.value;\n                if (attrName === 'start-line-number') {\n                    value = value.toLowerCase() === 'none' ? null : parseInt(value);\n                }\n            } else {\n                value = defaultParams[attrName];\n            }\n            uiParameters[attrName] = value;\n        }\n        return uiParameters;\n    }\n\n    /**\n     * Get the specified language string using\n     * AJAX and plug it into the given textarea\n     * @param {string} langStringName The language string name.\n     * @param {DOMnode} textarea The textarea into which the error message\n     * should be plugged.\n     * @param {string} additionalText Extra text to follow the result code.\n     */\n    function setLangString(langStringName, textarea, additionalText) {\n        require(['core/str'], function(str) {\n            var promise = str.get_string(langStringName, 'filter_ace_inline');\n            $.when(promise).then(function(message) {\n                textarea.show();\n                textarea.html(escapeHtml(\"*** \" + message + \" ***\\n\" + additionalText));\n            });\n        });\n    }\n\n\n    /**\n     * Analyse the response for errors. There are two sorts of error: sandbox failures,\n     * for which the field response.error is non-zero meaning the run didn't take\n     * place at all and failures in the run\n     * itself, such as compile errors, timeouts, runtime errors etc. The\n     * various codes are documented in the CodeRunner file sandbox.php.\n     * Some error returns, notably compilation error and runtime error, are not\n     * treated as errors here, since the stdout + stderr should reveal what\n     * happened anyway. More obscure errors are lumped together as 'Unknown\n     * runtime error'.\n     * @param {object} response The response from the web-service sandbox request.\n     * @returns string The language string to use for an error message or '' if\n     * no error message.\n     */\n    function diagnose(response) {\n        // Table of error conditions.\n        // Each row is response.error, response.result, langstring\n        // response.result is ignored if response.error is non-zero.\n        // Any condition not in the table is deemed an \"Unknown runtime error\".\n        var ERROR_RESPONSES = [\n            [1, 0, 'error_access_denied'], // Sandbox AUTH_ERROR\n            [2, 0, 'error_unknown_language'], // Sandbox WRONG_LANG_ID\n            [3, 0, 'error_access_denied'], // Sandbox ACCESS_DENIED\n            [4, 0, 'error_submission_limit_reached'], // Sandbox SUBMISSION_LIMIT_EXCEEDED\n            [5, 0, 'error_sandbox_server_overload'], // Sandbox SERVER_OVERLOAD\n            [0, 11, ''], // RESULT_COMPILATION_ERROR\n            [0, 12, ''], // RESULT_RUNTIME_ERROR\n            [0, 13, 'error_timeout'], // RESULT TIME_LIMIT\n            [0, RESULT_SUCCESS, ''], // RESULT_SUCCESS\n            [0, 17, 'error_memory_limit'], // RESULT_MEMORY_LIMIT\n            [0, 21, 'error_sandbox_server_overload'], // RESULT_SERVER_OVERLOAD\n            [0, 30, 'error_excessive_output']  // RESULT OUTPUT_LIMIT\n        ];\n        for (var i=0; i < ERROR_RESPONSES.length; i++) {\n            var row = ERROR_RESPONSES[i];\n            if (row[0] == response.error && (response.error != 0 || response.result == row[1])) {\n                return row[2];\n            }\n        }\n        return 'error_unknown_runtime';\n    }\n\n    /**\n     * Concatenates the cmpinfo, stdout and stderr fields of the sandbox\n     * response, truncating both stdout and stderr to a given maximum length\n     * if necessary (in which case '... (truncated)' is appended.\n     * @param {object} response Sandbox response object\n     * @param {int} maxLen The maximum length of the trimmed stringlen.\n     */\n    function combinedOutput(response, maxLen) {\n        var limit = s => s.length <= maxLen ? s : s.substr(0, maxLen) + '... (truncated)';\n        return response.cmpinfo + limit(response.output) + limit(response.stderr);\n    }\n\n    /**\n     * Handle a click on the Try it! button.\n     * @param {object} ajax The core Moodle ajax module.\n     * @param {html_element} outputDisplayArea The HTML <p> element in which to display output.\n     * @param {object} aceSession The Ace editor session.\n     * @param {int} uiParameters The various parameters (mostly attributes of the pre element).\n     * Keys are button-name, lang, stdin, files, params, prefix, suffix, codemapper, html-output.\n     */\n    function handleButtonClick(ajax, outputDisplayArea, aceSession, uiParameters) {\n        var htmlOutput = uiParameters['html-output'] !== null;\n        var maxLen = uiParameters['max-output-length'];\n        outputDisplayArea.html('');\n        if (htmlOutput) {\n            outputDisplayArea.hide();\n        }\n        outputDisplayArea.next('div.filter-ace-inline-html').remove();\n\n        var code = aceSession.getValue();\n        var mapFunc = uiParameters['code-mapper'];\n        if (mapFunc) {\n            code = window[mapFunc](code);\n        }\n        code = uiParameters.prefix + code + uiParameters.suffix;\n        ajax.call([{\n            methodname: 'qtype_coderunner_run_in_sandbox',\n            args: {\n                contextid: M.cfg.contextid,\n                sourcecode: code,\n                language: uiParameters.lang,\n                stdin: uiParameters.stdin,\n                files: uiParameters.files,\n                params: uiParameters.params\n            },\n            done: function(responseJson) {\n                var response = JSON.parse(responseJson);\n                var error = diagnose(response);\n                if (error === '') {\n                    // If no errors or compilation error or runtime error\n                    if (!htmlOutput || response.result !== RESULT_SUCCESS) {\n                        // Either it's not HTML output or it is but we have compilation or runtime errors.\n                        var text = combinedOutput(response, maxLen);\n                        outputDisplayArea.show();\n                        outputDisplayArea.html(escapeHtml(text));\n                    } else { // Valid HTML output - just plug in the raw html to the DOM.\n                        // Repeat the deletion of previous output in case of multiple button clicks.\n                        outputDisplayArea.next('div.filter-ace-inline-html').remove();\n                        var html = $(\"<div class='filter-ace-inline-html '\" +\n                                \"style='background-color:#eff;padding:5px;'\" +\n                                response.output + \"</div>\");\n                        outputDisplayArea.after(html);\n                    }\n                } else {\n                    // If an error occurs, display the language string in the\n                    // outputDisplayArea plus additional info.\n                    var extra = response.error == 0 ? combinedOutput(response, maxLen) : '';\n                    if (error === 'error_unknown_runtime') {\n                        extra += response.error ? '(Sandbox error code ' + response.error + ')' :\n                                '(Run result: ' + response.result + ')';\n                    }\n                    setLangString(error, outputDisplayArea, extra);\n                }\n            },\n            fail: function(error) {\n                alert(error.message);\n            }\n        }]);\n    }\n\n    /**\n     * Add a UI div containing a Try it! button and a paragraph to display the\n     * results of a button click (hidden until button clicked).\n     * If uiParameters['html-output'] is non-null,\n     * the output paragraph is used only for error output, and the output of the run\n     * is inserted directly into the DOM after the (usually hidden) paragraph.\n     * @param {html_element} editNode The Ace edit node after which the div should be inserted.\n     * @param {object} aceSession The Ace editor session.\n     * @param {int} uiParameters The various parameters (mostly attributes of the pre element).\n     * Keys are button-name, lang, stdin, files, params, prefix, suffix, html-output.\n     */\n    function addUi(editNode, aceSession, uiParameters) {\n        var button = $(\"<div><button type='button' class='btn btn-secondary' \" +\n                \"style='margin-bottom:6px;padding:2px 8px;'>\" +\n                uiParameters['button-name'] + \"</button></div>\");\n        var outputDisplayArea = $(\"<p style='font-family:monospace; font-size:12px;width:100%;\" +\n                \"background-color:#eff;border:1px gray;padding:5px;overflow-wrap:break-word;'></p>\");\n        editNode.after(button);\n        button.after(outputDisplayArea);\n        outputDisplayArea.hide();\n        M.util.js_pending('core/ajax');\n        require(['core/ajax'], function(ajax) {\n            button.on('click', function() {\n                handleButtonClick(ajax, outputDisplayArea, aceSession, uiParameters);\n            });\n        });\n        M.util.js_complete('core/ajax');\n    }\n\n\n    /**\n     * Replace any PRE elements of class ace-highlight-code with a\n     * readonly Ace editor window.\n     * @param {object} ace The JavaScript Ace editor object.\n     * @param {DOMElement} root The root of the tree in which highlighting should\n     * be applied.\n     */\n    function applyAceHighlighting(ace, root) {\n        var defaultParams = {\n            'lang': 'python3',\n            'font-size': '11pt',\n            'start-line-number': null,\n            'readonly': true\n        };\n        applyAceAndBuildUi(ace, root, false, defaultParams);\n    }\n\n    /**\n     * Replace any PRE elements of class ace-interactive-code with an\n     * Ace editor window and a Try it! button that allows the code to be run.\n     * @param {object} ace The JavaScript Ace editor object.\n     * @param {DOMElement} root The root of the tree in which the actions should\n     * be applied.\n     * @param {string} config The plugin configuration settings.\n     */\n    function applyAceInteractive(ace, root, config) {\n        var defaultParams = {\n            'lang': 'python3',\n            'font-size': '11pt',\n            'start-line-number': 1,\n            'button-name': config['button_label'],\n            'readonly': null,\n            'stdin': '',\n            'files': '',\n            'prefix': '',\n            'suffix': '',\n            'params': '{\"cputime\": 5}',\n            'code-mapper': null,\n            'html-output': null,\n            'max-output-length': 10000\n        };\n        applyAceAndBuildUi(ace, root, true, defaultParams);\n    }\n\n    /**\n     * Replace all <pre> elements in the document rooted at root that have\n     * the given className with an Ace editor windows that display the\n     * code in whatever language has been set.\n     * @param {object} ace The Ace editor code.\n     * @param {object} root The root of the HTML document to modify.\n     * @param {bool} isInteractive True for ace-interactive otherwise false.\n     * @param {object} defaultParams An object defining the allowed pre attributes\n     * that control the state of the Ace editor and the (optional) UI.\n     */\n    function applyAceAndBuildUi(ace, root, isInteractive, defaultParams) {\n        var MAX_WINDOW_LINES = 50;\n        var mode = \"ace/mode/python\"; // Default is Python.\n        var className = isInteractive ? 'ace-interactive-code' : 'ace-highlight-code';\n        var codeElements = root.getElementsByClassName(className);\n        var css = {\n            margin: \"6px\",\n            \"line-height\": \"1.3\"\n        };\n\n        for (var i=0; i < codeElements.length; i++) {\n            var pre = codeElements[i];\n            if (pre.nodeName === 'PRE' && pre.style.display !== 'none') {\n                let uiParameters = getUiParameters(pre, defaultParams);\n                var showLineNumbers = uiParameters['start-line-number'] ? true : false;\n                let jqpre = $(pre);\n                var text = jqpre.text();\n                var numLines = text.split(\"\\n\").length;\n\n                let editNode = $(\"<div></div>\"); // Ace editor manages this\n                css['min-width'] = pre.scrollWidth;\n                editNode.css(css);\n                jqpre.after(editNode);    // Insert the edit node\n\n                let aceConfig = {\n                    newLineMode: \"unix\",\n                    mode: mode,\n                    minLines: numLines,\n                    maxLines: MAX_WINDOW_LINES,\n                    fontSize: uiParameters['font-size'],\n                    showLineNumbers: showLineNumbers,\n                    firstLineNumber: uiParameters['start-line-number'],\n                    showGutter: showLineNumbers,\n                    showPrintMargin: false,\n                    autoScrollEditorIntoView: true,\n                    highlightActiveLine: showLineNumbers\n                };\n\n                let editor = ace.edit(editNode.get(0), aceConfig);\n                let session = editor.getSession();\n                session.setValue(text);\n                if (uiParameters.readonly !== null) {\n                    editor.setReadOnly(true);\n                }\n\n                // Add a button and text area for output if ace-interactive-code.\n                if (isInteractive) {\n                    addUi(editNode, session, uiParameters);\n                } else {\n                    editor.renderer.$cursorLayer.element.style.display = \"none\"; // Hide cursor.\n                }\n                jqpre.hide();  // NB this sets display = 'none', checked above.\n            }\n        }\n    }\n\n    return {\n        initAceInteractive: async function(config) {\n            if (!window.ace_inline_code_interactive_done) { // Do it once only.\n                while (!window.ace) {\n                    await new Promise(resolve => setTimeout(resolve, 1000));\n                }\n                applyAceInteractive(window.ace, document, config);\n                // Add a hook for use by dynamically generated content.\n                window.applyAceInteractive = function () {\n                    applyAceInteractive(window.ace, document, config);\n                };\n            }\n            window.ace_inline_code_interactive_done = true;\n        },\n        initAceHighlighting: async function() {\n            if (!window.ace_inline_code_highlighting_done) { // Do it once only.\n                while (!window.ace) {\n                    await new Promise(resolve => setTimeout(resolve, 1000));\n                }\n                applyAceHighlighting(window.ace, document);\n                // Add a hook for use by dynamically generated content.\n                window.applyAceHighlighting = function () {\n                    applyAceHighlighting(window.ace, document);\n                };\n            }\n            window.ace_inline_code_highlighting_done = true;\n        }\n    };\n});"],"file":"ace_inline_code.min.js"}