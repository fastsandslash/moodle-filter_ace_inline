define("filter_ace_inline/modules/file_helpers",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.setupFileHandler=_exports.getFiles=void 0;
/**
   * JavaScript for helping parse files and pseudofiles.
   *
   * @module     filter_ace_inline/file_helpers
   * @copyright  Richard Lobb, Michelle Hsieh 2022
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
let uploadFiles={};_exports.getFiles=async uiParameters=>{let taids=uiParameters.paramsMap["file-taids"],map={};if(0!==Object.keys(taids).length){try{taids=JSON.parse(taids)}catch(SyntaxError){return Promise.resolve("error")}for(const filename in taids)if(taids.hasOwnProperty(filename)){const id=taids[filename],file=document.querySelector("#"+id);if(null===file)return Promise.resolve("bad_id");map[filename]=file.value}}for(const name in uploadFiles)uploadFiles.hasOwnProperty(name)&&(map[name]=uploadFiles[name]);return Promise.resolve(JSON.stringify(map))};_exports.setupFileHandler=async uploadElementId=>{function readOneFile(file){return new Promise(((resolve,reject)=>{let rdr=new FileReader;rdr.onload=()=>{resolve(rdr.result)},rdr.onerror=reject,rdr.readAsText(file)}))}const element=document.querySelector("#"+uploadElementId);element.setAttribute("multiple","1"),element.addEventListener("change",(async()=>{uploadFiles={};const files=element.files;for(const file of files)uploadFiles[file.name]=await readOneFile(file)}))}}));

//# sourceMappingURL=file_helpers.min.js.map