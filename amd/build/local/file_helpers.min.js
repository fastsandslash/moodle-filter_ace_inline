define("filter_ace_inline/local/file_helpers",["exports","filter_ace_inline/local/utils"],(function(_exports,_utils){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.setupFileHandler=_exports.getFiles=void 0;
/**
   * JavaScript for helping parse files and pseudofiles.
   *
   * @module     filter_ace_inline/local/file_helpers
   * @copyright  Richard Lobb, Michelle Hsieh 2022
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
let uploadFiles={};_exports.getFiles=async uiParameters=>{const uploadId=uiParameters.paramsMap["file-upload-id"];let taids=uiParameters.paramsMap["file-taids"],sandboxArgs=[],map={};if(0!==Object.keys(taids).length){try{taids=JSON.parse(taids)}catch(SyntaxError){return Promise.resolve("error")}for(const filename in taids)if(taids.hasOwnProperty(filename)){const id=taids[filename],file=document.querySelector("#"+id);if(null===file)return Promise.resolve("bad_id");map[filename]=file.value}}for(const name in uploadFiles)uploadFiles.hasOwnProperty(name)&&uploadFiles[name].hasOwnProperty(uploadId)&&(map[name]=uploadFiles[name][uploadId],sandboxArgs.push(name));return uiParameters.setSandboxParams(sandboxArgs),Promise.resolve(JSON.stringify(map))};_exports.setupFileHandler=async uploadElementId=>{const errorNode=(0,_utils.createComponent)("div",["filter-ace-inline-files"],{hidden:""});function readOneFile(file){return new Promise(((resolve,reject)=>{let rdr=new FileReader;rdr.onload=()=>{resolve(rdr.result)},rdr.onerror=reject,rdr.readAsText(file)}))}const element=document.querySelector("#"+uploadElementId);element.parentNode.insertBefore(errorNode,element.nextSibling),element.setAttribute("multiple","1"),element.addEventListener("change",(async()=>{errorNode.innerHTML="",uploadFiles={};const files=element.files;for(const file of files){let fileValues={};const parsedName=parseFileName(file.name);parsedName!==file.name&&(errorNode.innerHTML="<li><em>"+file.name+"</em><strong>&nbsp;&gt;&gt;&nbsp;"+parsedName+"</strong></li>"+errorNode.innerHTML),fileValues[uploadElementId]=await readOneFile(file),uploadFiles[parsedName]=fileValues}""!==errorNode.innerHTML?(errorNode.innerHTML="<strong>"+await(0,_utils.getLangString)("file_changed_name")+"</strong><ul>"+errorNode.innerHTML+"</ul>",errorNode.removeAttribute("hidden")):errorNode.setAttribute("hidden","1")}))};const parseFileName=filename=>filename.replace(/\s/g,"_").replace(/[^A-Za-z0-9._-]/g,"")}));

//# sourceMappingURL=file_helpers.min.js.map